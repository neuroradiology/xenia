//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer XeResolveConstants
// {
//
//   uint xe_resolve_edram_info;        // Offset:    0 Size:     4
//   uint xe_resolve_address_info;      // Offset:    4 Size:     4
//   uint xe_resolve_dest_info;         // Offset:    8 Size:     4
//   uint xe_resolve_dest_pitch;        // Offset:   12 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// xe_resolve_source                 texture   uint4         buf      T0             t0      1 
// xe_resolve_dest                       UAV   uint2         buf      U0             u0      1 
// XeResolveConstants                cbuffer      NA          NA     CB0            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[0:0][1], immediateIndexed, space=0
dcl_resource_buffer (uint,uint,uint,uint) T0[0:0], space=0
dcl_uav_typed_buffer (uint,uint,uint,uint) U0[0:0], space=0
dcl_input vThreadID.xy
dcl_temps 16
dcl_thread_group 8, 8, 1
ishl r0.xw, vThreadID.xxxx, l(1, 0, 0, 1)
ushr r1.x, CB0[0][0].y, l(7)
bfi r1.x, l(11), l(3), r1.x, l(0)
uge r1.x, r0.w, r1.x
if_nz r1.x
  ret 
endif 
ushr r1.xy, CB0[0][0].yyyy, l(5, 29, 0, 0)
mov r1.z, CB0[0][0].y
bfi r2.xy, l(5, 2, 0, 0), l(3, 3, 0, 0), r1.zxzz, l(0, 0, 0, 0)
mov r0.yz, vThreadID.yyyy
iadd r2.xy, r0.wzww, r2.xyxx
and r3.xyzw, CB0[0][0].xzwx, l(1023, 0x01000000, 0x00003fff, 0x40000000)
ubfe r4.xyzw, l(12, 2, 1, 4), l(13, 10, 29, 25), CB0[0][0].xxxx
uge r1.w, l(3), r1.y
if_nz r1.w
  mov r5.y, r1.y
else 
  ieq r1.w, r1.y, l(5)
  if_nz r1.w
    mov r5.y, l(2)
  else 
    mov r5.y, l(0)
  endif 
endif 
uge r2.zw, r4.yyyy, l(0, 0, 2, 1)
and r2.zw, r2.zzzw, l(0, 0, 1, 1)
ishl r2.xy, r2.xyxx, r2.zwzz
ushr r5.x, r5.y, l(1)
and r5.xy, r5.xyxx, l(1, 1, 0, 0)
iadd r2.xy, r2.xyxx, r5.xyxx
udiv r1.w, null, r2.x, l(80)
ushr r2.w, r2.y, l(4)
movc r4.y, r4.z, l(1), l(0)
ishl r5.x, r1.w, r4.y
imad r5.x, r2.w, r3.x, r5.x
iadd r4.x, r4.x, r5.x
ineg r5.x, r1.w
ineg r5.y, r2.w
imad r2.xy, r5.xyxx, l(80, 16, 0, 0), r2.xyxx
imad r1.w, r2.y, l(80), r2.x
ishl r1.w, r1.w, r4.y
imad r1.w, r4.x, l(1280), r1.w
iadd r2.x, r2.z, r4.z
ishl r2.x, l(1), r2.x
iadd r2.x, r1.w, r2.x
ld r5.xyzw, r1.wwww, T0[0].xyzw
ld r6.xyzw, r2.xxxx, T0[0].xyzw
if_nz r4.z
  iadd r2.y, r1.w, l(1)
  ld r7.xyzw, r2.yyyy, T0[0].ywxz
  iadd r2.y, r2.x, l(1)
  ld r8.xyzw, r2.yyyy, T0[0].ywxz
  switch r4.w
    case l(5)
    mov r9.xy, r5.ywyy
    mov r9.zw, r7.xxxy
    mov r7.xy, r5.xzxx
    movc r9.xyzw, r3.yyyy, r9.xyzw, r7.xyzw
    ibfe r9.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r9.xyzw
    itof r9.xyzw, r9.xyzw
    mul r9.xyzw, r9.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
    max r5.xyzw, r9.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
    mov r9.xy, r6.ywyy
    mov r9.zw, r8.xxxy
    mov r8.xy, r6.xzxx
    movc r9.xyzw, r3.yyyy, r9.xyzw, r8.xyzw
    ibfe r9.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r9.xyzw
    itof r9.xyzw, r9.xyzw
    mul r9.xyzw, r9.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
    max r6.xyzw, r9.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
    break 
    case l(7)
    mov r9.xy, r5.ywyy
    mov r9.zw, r7.xxxy
    mov r7.xy, r5.xzxx
    movc r9.xyzw, r3.yyyy, r9.xyzw, r7.xyzw
    f16tof32 r5.xyzw, r9.xyzw
    mov r9.xy, r6.ywyy
    mov r9.zw, r8.xxxy
    mov r8.xy, r6.xzxx
    movc r9.xyzw, r3.yyyy, r9.xyzw, r8.xyzw
    f16tof32 r6.xyzw, r9.xyzw
    break 
    default 
    mov r5.xy, r5.xzxx
    mov r5.zw, r7.zzzw
    mov r6.xy, r6.xzxx
    mov r6.zw, r8.zzzw
    break 
  endswitch 
else 
  switch r4.w
    case l(0)
    case l(1)
    movc r2.y, r3.y, l(16), l(0)
    ushr r7.xyzw, r5.xyzw, r2.yyyy
    and r7.xyzw, r7.xyzw, l(255, 255, 255, 255)
    utof r7.xyzw, r7.xyzw
    mul r5.xyzw, r7.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
    ushr r7.xyzw, r6.xyzw, r2.yyyy
    and r7.xyzw, r7.xyzw, l(255, 255, 255, 255)
    utof r7.xyzw, r7.xyzw
    mul r6.xyzw, r7.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
    break 
    case l(2)
    case l(10)
    movc r2.y, r3.y, l(20), l(0)
    ushr r7.xyzw, r5.xyzw, r2.yyyy
    and r7.xyzw, r7.xyzw, l(1023, 1023, 1023, 1023)
    utof r7.xyzw, r7.xyzw
    mul r5.xyzw, r7.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
    ushr r7.xyzw, r6.xyzw, r2.yyyy
    and r7.xyzw, r7.xyzw, l(1023, 1023, 1023, 1023)
    utof r7.xyzw, r7.xyzw
    mul r6.xyzw, r7.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
    break 
    case l(3)
    case l(12)
    movc r2.y, r3.y, l(20), l(0)
    ushr r7.xyzw, r5.xyzw, r2.yyyy
    and r8.xyzw, r7.xyzw, l(1023, 1023, 1023, 1023)
    and r9.xyzw, r7.xyzw, l(127, 127, 127, 127)
    ubfe r10.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r7.xyzw
    firstbit_hi r11.xyzw, r9.xyzw
    iadd r11.xyzw, r11.xyzw, l(-24, -24, -24, -24)
    movc r11.xyzw, r9.xyzw, r11.xyzw, l(8,8,8,8)
    iadd r12.xyzw, -r11.xyzw, l(1, 1, 1, 1)
    movc r12.xyzw, r10.xyzw, r10.xyzw, r12.xyzw
    bfi r7.xyzw, l(7, 7, 7, 7), r11.xyzw, r7.xyzw, l(0, 0, 0, 0)
    and r7.xyzw, r7.xyzw, l(127, 127, 127, 127)
    movc r7.xyzw, r10.xyzw, r9.xyzw, r7.xyzw
    ishl r9.xyzw, r12.xyzw, l(23, 23, 23, 23)
    iadd r9.xyzw, r9.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
    ishl r7.xyzw, r7.xyzw, l(16, 16, 16, 16)
    iadd r7.xyzw, r9.xyzw, r7.xyzw
    movc r5.xyzw, r8.xyzw, r7.xyzw, l(0,0,0,0)
    ushr r7.xyzw, r6.xyzw, r2.yyyy
    and r8.xyzw, r7.xyzw, l(1023, 1023, 1023, 1023)
    and r9.xyzw, r7.xyzw, l(127, 127, 127, 127)
    ubfe r10.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r7.xyzw
    firstbit_hi r11.xyzw, r9.xyzw
    iadd r11.xyzw, r11.xyzw, l(-24, -24, -24, -24)
    movc r11.xyzw, r9.xyzw, r11.xyzw, l(8,8,8,8)
    iadd r12.xyzw, -r11.xyzw, l(1, 1, 1, 1)
    movc r12.xyzw, r10.xyzw, r10.xyzw, r12.xyzw
    bfi r7.xyzw, l(7, 7, 7, 7), r11.xyzw, r7.xyzw, l(0, 0, 0, 0)
    and r7.xyzw, r7.xyzw, l(127, 127, 127, 127)
    movc r7.xyzw, r10.xyzw, r9.xyzw, r7.xyzw
    ishl r9.xyzw, r12.xyzw, l(23, 23, 23, 23)
    iadd r9.xyzw, r9.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
    ishl r7.xyzw, r7.xyzw, l(16, 16, 16, 16)
    iadd r7.xyzw, r9.xyzw, r7.xyzw
    movc r6.xyzw, r8.xyzw, r7.xyzw, l(0,0,0,0)
    break 
    case l(4)
    ibfe r7.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r5.xyzw
    itof r7.xyzw, r7.xyzw
    mul r7.xyzw, r7.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
    max r5.xyzw, r7.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
    ibfe r7.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r6.xyzw
    itof r7.xyzw, r7.xyzw
    mul r7.xyzw, r7.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
    max r6.xyzw, r7.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
    break 
    case l(6)
    f16tof32 r5.xyzw, r5.xyzw
    f16tof32 r6.xyzw, r6.xyzw
    break 
    default 
    break 
  endswitch 
endif 
ibfe r2.y, l(6), l(16), CB0[0][0].z
ishl r2.y, r2.y, l(23)
iadd r2.y, r2.y, l(0x3f800000)
uge r2.z, r1.y, l(4)
if_nz r2.z
  mul r2.z, r2.y, l(0.500000)
  ishl r2.w, l(80), r4.z
  iadd r4.x, r1.w, r2.w
  ld r7.xyzw, r4.xxxx, T0[0].xyzw
  iadd r2.w, r2.w, r2.x
  ld r8.xyzw, r2.wwww, T0[0].xyzw
  if_nz r4.z
    iadd r2.w, r1.w, l(161)
    ld r9.xyzw, r2.wwww, T0[0].ywxz
    iadd r2.w, r2.x, l(161)
    ld r10.xyzw, r2.wwww, T0[0].ywxz
    switch r4.w
      case l(5)
      mov r11.xy, r7.ywyy
      mov r11.zw, r9.xxxy
      mov r9.xy, r7.xzxx
      movc r11.xyzw, r3.yyyy, r11.xyzw, r9.xyzw
      ibfe r11.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r11.xyzw
      itof r11.xyzw, r11.xyzw
      mul r11.xyzw, r11.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
      max r7.xyzw, r11.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
      mov r11.xy, r8.ywyy
      mov r11.zw, r10.xxxy
      mov r10.xy, r8.xzxx
      movc r11.xyzw, r3.yyyy, r11.xyzw, r10.xyzw
      ibfe r11.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r11.xyzw
      itof r11.xyzw, r11.xyzw
      mul r11.xyzw, r11.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
      max r8.xyzw, r11.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
      break 
      case l(7)
      mov r11.xy, r7.ywyy
      mov r11.zw, r9.xxxy
      mov r9.xy, r7.xzxx
      movc r11.xyzw, r3.yyyy, r11.xyzw, r9.xyzw
      f16tof32 r7.xyzw, r11.xyzw
      mov r11.xy, r8.ywyy
      mov r11.zw, r10.xxxy
      mov r10.xy, r8.xzxx
      movc r11.xyzw, r3.yyyy, r11.xyzw, r10.xyzw
      f16tof32 r8.xyzw, r11.xyzw
      break 
      default 
      mov r7.xy, r7.xzxx
      mov r7.zw, r9.zzzw
      mov r8.xy, r8.xzxx
      mov r8.zw, r10.zzzw
      break 
    endswitch 
  else 
    switch r4.w
      case l(0)
      case l(1)
      movc r2.w, r3.y, l(16), l(0)
      ushr r9.xyzw, r7.xyzw, r2.wwww
      and r9.xyzw, r9.xyzw, l(255, 255, 255, 255)
      utof r9.xyzw, r9.xyzw
      mul r7.xyzw, r9.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
      ushr r9.xyzw, r8.xyzw, r2.wwww
      and r9.xyzw, r9.xyzw, l(255, 255, 255, 255)
      utof r9.xyzw, r9.xyzw
      mul r8.xyzw, r9.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
      break 
      case l(2)
      case l(10)
      movc r2.w, r3.y, l(20), l(0)
      ushr r9.xyzw, r7.xyzw, r2.wwww
      and r9.xyzw, r9.xyzw, l(1023, 1023, 1023, 1023)
      utof r9.xyzw, r9.xyzw
      mul r7.xyzw, r9.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
      ushr r9.xyzw, r8.xyzw, r2.wwww
      and r9.xyzw, r9.xyzw, l(1023, 1023, 1023, 1023)
      utof r9.xyzw, r9.xyzw
      mul r8.xyzw, r9.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
      break 
      case l(3)
      case l(12)
      movc r2.w, r3.y, l(20), l(0)
      ushr r9.xyzw, r7.xyzw, r2.wwww
      and r10.xyzw, r9.xyzw, l(1023, 1023, 1023, 1023)
      and r11.xyzw, r9.xyzw, l(127, 127, 127, 127)
      ubfe r12.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r9.xyzw
      firstbit_hi r13.xyzw, r11.xyzw
      iadd r13.xyzw, r13.xyzw, l(-24, -24, -24, -24)
      movc r13.xyzw, r11.xyzw, r13.xyzw, l(8,8,8,8)
      iadd r14.xyzw, -r13.xyzw, l(1, 1, 1, 1)
      movc r14.xyzw, r12.xyzw, r12.xyzw, r14.xyzw
      bfi r9.xyzw, l(7, 7, 7, 7), r13.xyzw, r9.xyzw, l(0, 0, 0, 0)
      and r9.xyzw, r9.xyzw, l(127, 127, 127, 127)
      movc r9.xyzw, r12.xyzw, r11.xyzw, r9.xyzw
      ishl r11.xyzw, r14.xyzw, l(23, 23, 23, 23)
      iadd r11.xyzw, r11.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
      ishl r9.xyzw, r9.xyzw, l(16, 16, 16, 16)
      iadd r9.xyzw, r11.xyzw, r9.xyzw
      movc r7.xyzw, r10.xyzw, r9.xyzw, l(0,0,0,0)
      ushr r9.xyzw, r8.xyzw, r2.wwww
      and r10.xyzw, r9.xyzw, l(1023, 1023, 1023, 1023)
      and r11.xyzw, r9.xyzw, l(127, 127, 127, 127)
      ubfe r12.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r9.xyzw
      firstbit_hi r13.xyzw, r11.xyzw
      iadd r13.xyzw, r13.xyzw, l(-24, -24, -24, -24)
      movc r13.xyzw, r11.xyzw, r13.xyzw, l(8,8,8,8)
      iadd r14.xyzw, -r13.xyzw, l(1, 1, 1, 1)
      movc r14.xyzw, r12.xyzw, r12.xyzw, r14.xyzw
      bfi r9.xyzw, l(7, 7, 7, 7), r13.xyzw, r9.xyzw, l(0, 0, 0, 0)
      and r9.xyzw, r9.xyzw, l(127, 127, 127, 127)
      movc r9.xyzw, r12.xyzw, r11.xyzw, r9.xyzw
      ishl r11.xyzw, r14.xyzw, l(23, 23, 23, 23)
      iadd r11.xyzw, r11.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
      ishl r9.xyzw, r9.xyzw, l(16, 16, 16, 16)
      iadd r9.xyzw, r11.xyzw, r9.xyzw
      movc r8.xyzw, r10.xyzw, r9.xyzw, l(0,0,0,0)
      break 
      case l(4)
      ibfe r9.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r7.xyzw
      itof r9.xyzw, r9.xyzw
      mul r9.xyzw, r9.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
      max r7.xyzw, r9.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
      ibfe r9.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r8.xyzw
      itof r9.xyzw, r9.xyzw
      mul r9.xyzw, r9.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
      max r8.xyzw, r9.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
      break 
      case l(6)
      f16tof32 r7.xyzw, r7.xyzw
      f16tof32 r8.xyzw, r8.xyzw
      break 
      default 
      break 
    endswitch 
  endif 
  add r5.xyzw, r5.xyzw, r7.xyzw
  add r6.xyzw, r6.xyzw, r8.xyzw
  uge r1.y, r1.y, l(6)
  if_nz r1.y
    mul r2.y, r2.y, l(0.250000)
    ishl r4.xy, l(1, 81, 0, 0), r4.zzzz
    iadd r7.xy, r1.wwww, r4.xyxx
    ld r8.xyzw, r7.xxxx, T0[0].xyzw
    iadd r4.xy, r2.xxxx, r4.xyxx
    ld r9.xyzw, r4.xxxx, T0[0].xyzw
    if_nz r4.z
      iadd r1.y, r1.w, l(3)
      ld r10.xyzw, r1.yyyy, T0[0].ywxz
      iadd r1.y, r2.x, l(3)
      ld r11.xyzw, r1.yyyy, T0[0].ywxz
      switch r4.w
        case l(5)
        mov r12.xy, r8.ywyy
        mov r12.zw, r10.xxxy
        mov r10.xy, r8.xzxx
        movc r12.xyzw, r3.yyyy, r12.xyzw, r10.xyzw
        ibfe r12.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r12.xyzw
        itof r12.xyzw, r12.xyzw
        mul r12.xyzw, r12.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r8.xyzw, r12.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        mov r12.xy, r9.ywyy
        mov r12.zw, r11.xxxy
        mov r11.xy, r9.xzxx
        movc r12.xyzw, r3.yyyy, r12.xyzw, r11.xyzw
        ibfe r12.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r12.xyzw
        itof r12.xyzw, r12.xyzw
        mul r12.xyzw, r12.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r9.xyzw, r12.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        break 
        case l(7)
        mov r12.xy, r8.ywyy
        mov r12.zw, r10.xxxy
        mov r10.xy, r8.xzxx
        movc r12.xyzw, r3.yyyy, r12.xyzw, r10.xyzw
        f16tof32 r8.xyzw, r12.xyzw
        mov r12.xy, r9.ywyy
        mov r12.zw, r11.xxxy
        mov r11.xy, r9.xzxx
        movc r12.xyzw, r3.yyyy, r12.xyzw, r11.xyzw
        f16tof32 r9.xyzw, r12.xyzw
        break 
        default 
        mov r8.xy, r8.xzxx
        mov r8.zw, r10.zzzw
        mov r9.xy, r9.xzxx
        mov r9.zw, r11.zzzw
        break 
      endswitch 
    else 
      switch r4.w
        case l(0)
        case l(1)
        movc r1.y, r3.y, l(16), l(0)
        ushr r10.xyzw, r8.xyzw, r1.yyyy
        and r10.xyzw, r10.xyzw, l(255, 255, 255, 255)
        utof r10.xyzw, r10.xyzw
        mul r8.xyzw, r10.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
        ushr r10.xyzw, r9.xyzw, r1.yyyy
        and r10.xyzw, r10.xyzw, l(255, 255, 255, 255)
        utof r10.xyzw, r10.xyzw
        mul r9.xyzw, r10.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
        break 
        case l(2)
        case l(10)
        movc r1.y, r3.y, l(20), l(0)
        ushr r10.xyzw, r8.xyzw, r1.yyyy
        and r10.xyzw, r10.xyzw, l(1023, 1023, 1023, 1023)
        utof r10.xyzw, r10.xyzw
        mul r8.xyzw, r10.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
        ushr r10.xyzw, r9.xyzw, r1.yyyy
        and r10.xyzw, r10.xyzw, l(1023, 1023, 1023, 1023)
        utof r10.xyzw, r10.xyzw
        mul r9.xyzw, r10.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
        break 
        case l(3)
        case l(12)
        movc r1.y, r3.y, l(20), l(0)
        ushr r10.xyzw, r8.xyzw, r1.yyyy
        and r11.xyzw, r10.xyzw, l(1023, 1023, 1023, 1023)
        and r12.xyzw, r10.xyzw, l(127, 127, 127, 127)
        ubfe r13.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r10.xyzw
        firstbit_hi r14.xyzw, r12.xyzw
        iadd r14.xyzw, r14.xyzw, l(-24, -24, -24, -24)
        movc r14.xyzw, r12.xyzw, r14.xyzw, l(8,8,8,8)
        iadd r15.xyzw, -r14.xyzw, l(1, 1, 1, 1)
        movc r15.xyzw, r13.xyzw, r13.xyzw, r15.xyzw
        bfi r10.xyzw, l(7, 7, 7, 7), r14.xyzw, r10.xyzw, l(0, 0, 0, 0)
        and r10.xyzw, r10.xyzw, l(127, 127, 127, 127)
        movc r10.xyzw, r13.xyzw, r12.xyzw, r10.xyzw
        ishl r12.xyzw, r15.xyzw, l(23, 23, 23, 23)
        iadd r12.xyzw, r12.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
        ishl r10.xyzw, r10.xyzw, l(16, 16, 16, 16)
        iadd r10.xyzw, r12.xyzw, r10.xyzw
        movc r8.xyzw, r11.xyzw, r10.xyzw, l(0,0,0,0)
        ushr r10.xyzw, r9.xyzw, r1.yyyy
        and r11.xyzw, r10.xyzw, l(1023, 1023, 1023, 1023)
        and r12.xyzw, r10.xyzw, l(127, 127, 127, 127)
        ubfe r13.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r10.xyzw
        firstbit_hi r14.xyzw, r12.xyzw
        iadd r14.xyzw, r14.xyzw, l(-24, -24, -24, -24)
        movc r14.xyzw, r12.xyzw, r14.xyzw, l(8,8,8,8)
        iadd r15.xyzw, -r14.xyzw, l(1, 1, 1, 1)
        movc r15.xyzw, r13.xyzw, r13.xyzw, r15.xyzw
        bfi r10.xyzw, l(7, 7, 7, 7), r14.xyzw, r10.xyzw, l(0, 0, 0, 0)
        and r10.xyzw, r10.xyzw, l(127, 127, 127, 127)
        movc r10.xyzw, r13.xyzw, r12.xyzw, r10.xyzw
        ishl r12.xyzw, r15.xyzw, l(23, 23, 23, 23)
        iadd r12.xyzw, r12.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
        ishl r10.xyzw, r10.xyzw, l(16, 16, 16, 16)
        iadd r10.xyzw, r12.xyzw, r10.xyzw
        movc r9.xyzw, r11.xyzw, r10.xyzw, l(0,0,0,0)
        break 
        case l(4)
        ibfe r10.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r8.xyzw
        itof r10.xyzw, r10.xyzw
        mul r10.xyzw, r10.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r8.xyzw, r10.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        ibfe r10.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r9.xyzw
        itof r10.xyzw, r10.xyzw
        mul r10.xyzw, r10.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r9.xyzw, r10.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        break 
        case l(6)
        f16tof32 r8.xyzw, r8.xyzw
        f16tof32 r9.xyzw, r9.xyzw
        break 
        default 
        break 
      endswitch 
    endif 
    add r8.xyzw, r5.xyzw, r8.xyzw
    add r9.xyzw, r6.xyzw, r9.xyzw
    ld r7.xyzw, r7.yyyy, T0[0].xyzw
    ld r10.xyzw, r4.yyyy, T0[0].xyzw
    if_nz r4.z
      iadd r1.y, r1.w, l(163)
      ld r11.xyzw, r1.yyyy, T0[0].ywxz
      iadd r1.y, r2.x, l(163)
      ld r12.xyzw, r1.yyyy, T0[0].ywxz
      switch r4.w
        case l(5)
        mov r13.xy, r7.ywyy
        mov r13.zw, r11.xxxy
        mov r11.xy, r7.xzxx
        movc r13.xyzw, r3.yyyy, r13.xyzw, r11.xyzw
        ibfe r13.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r13.xyzw
        itof r13.xyzw, r13.xyzw
        mul r13.xyzw, r13.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r7.xyzw, r13.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        mov r13.xy, r10.ywyy
        mov r13.zw, r12.xxxy
        mov r12.xy, r10.xzxx
        movc r13.xyzw, r3.yyyy, r13.xyzw, r12.xyzw
        ibfe r13.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r13.xyzw
        itof r13.xyzw, r13.xyzw
        mul r13.xyzw, r13.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r10.xyzw, r13.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        break 
        case l(7)
        mov r13.xy, r7.ywyy
        mov r13.zw, r11.xxxy
        mov r11.xy, r7.xzxx
        movc r13.xyzw, r3.yyyy, r13.xyzw, r11.xyzw
        f16tof32 r7.xyzw, r13.xyzw
        mov r13.xy, r10.ywyy
        mov r13.zw, r12.xxxy
        mov r12.xy, r10.xzxx
        movc r13.xyzw, r3.yyyy, r13.xyzw, r12.xyzw
        f16tof32 r10.xyzw, r13.xyzw
        break 
        default 
        mov r7.xy, r7.xzxx
        mov r7.zw, r11.zzzw
        mov r10.xy, r10.xzxx
        mov r10.zw, r12.zzzw
        break 
      endswitch 
    else 
      switch r4.w
        case l(0)
        case l(1)
        movc r1.y, r3.y, l(16), l(0)
        ushr r4.xyzw, r7.xyzw, r1.yyyy
        and r4.xyzw, r4.xyzw, l(255, 255, 255, 255)
        utof r4.xyzw, r4.xyzw
        mul r7.xyzw, r4.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
        ushr r4.xyzw, r10.xyzw, r1.yyyy
        and r4.xyzw, r4.xyzw, l(255, 255, 255, 255)
        utof r4.xyzw, r4.xyzw
        mul r10.xyzw, r4.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
        break 
        case l(2)
        case l(10)
        movc r1.y, r3.y, l(20), l(0)
        ushr r4.xyzw, r7.xyzw, r1.yyyy
        and r4.xyzw, r4.xyzw, l(1023, 1023, 1023, 1023)
        utof r4.xyzw, r4.xyzw
        mul r7.xyzw, r4.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
        ushr r4.xyzw, r10.xyzw, r1.yyyy
        and r4.xyzw, r4.xyzw, l(1023, 1023, 1023, 1023)
        utof r4.xyzw, r4.xyzw
        mul r10.xyzw, r4.xyzw, l(0.000978, 0.000978, 0.000978, 0.000978)
        break 
        case l(3)
        case l(12)
        movc r1.y, r3.y, l(20), l(0)
        ushr r4.xyzw, r7.xyzw, r1.yyyy
        and r11.xyzw, r4.xyzw, l(1023, 1023, 1023, 1023)
        and r12.xyzw, r4.xyzw, l(127, 127, 127, 127)
        ubfe r13.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r4.xyzw
        firstbit_hi r14.xyzw, r12.xyzw
        iadd r14.xyzw, r14.xyzw, l(-24, -24, -24, -24)
        movc r14.xyzw, r12.xyzw, r14.xyzw, l(8,8,8,8)
        iadd r15.xyzw, -r14.xyzw, l(1, 1, 1, 1)
        movc r15.xyzw, r13.xyzw, r13.xyzw, r15.xyzw
        bfi r4.xyzw, l(7, 7, 7, 7), r14.xyzw, r4.xyzw, l(0, 0, 0, 0)
        and r4.xyzw, r4.xyzw, l(127, 127, 127, 127)
        movc r4.xyzw, r13.xyzw, r12.xyzw, r4.xyzw
        ishl r12.xyzw, r15.xyzw, l(23, 23, 23, 23)
        iadd r12.xyzw, r12.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
        ishl r4.xyzw, r4.xyzw, l(16, 16, 16, 16)
        iadd r4.xyzw, r12.xyzw, r4.xyzw
        movc r7.xyzw, r11.xyzw, r4.xyzw, l(0,0,0,0)
        ushr r4.xyzw, r10.xyzw, r1.yyyy
        and r11.xyzw, r4.xyzw, l(1023, 1023, 1023, 1023)
        and r12.xyzw, r4.xyzw, l(127, 127, 127, 127)
        ubfe r13.xyzw, l(3, 3, 3, 3), l(7, 7, 7, 7), r4.xyzw
        firstbit_hi r14.xyzw, r12.xyzw
        iadd r14.xyzw, r14.xyzw, l(-24, -24, -24, -24)
        movc r14.xyzw, r12.xyzw, r14.xyzw, l(8,8,8,8)
        iadd r15.xyzw, -r14.xyzw, l(1, 1, 1, 1)
        movc r15.xyzw, r13.xyzw, r13.xyzw, r15.xyzw
        bfi r4.xyzw, l(7, 7, 7, 7), r14.xyzw, r4.xyzw, l(0, 0, 0, 0)
        and r4.xyzw, r4.xyzw, l(127, 127, 127, 127)
        movc r4.xyzw, r13.xyzw, r12.xyzw, r4.xyzw
        ishl r12.xyzw, r15.xyzw, l(23, 23, 23, 23)
        iadd r12.xyzw, r12.xyzw, l(0x3e000000, 0x3e000000, 0x3e000000, 0x3e000000)
        ishl r4.xyzw, r4.xyzw, l(16, 16, 16, 16)
        iadd r4.xyzw, r12.xyzw, r4.xyzw
        movc r10.xyzw, r11.xyzw, r4.xyzw, l(0,0,0,0)
        break 
        case l(4)
        ibfe r4.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r7.xyzw
        itof r4.xyzw, r4.xyzw
        mul r4.xyzw, r4.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r7.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        ibfe r4.xyzw, l(16, 16, 16, 16), l(0, 0, 0, 0), r10.xyzw
        itof r4.xyzw, r4.xyzw
        mul r4.xyzw, r4.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977)
        max r10.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
        break 
        case l(6)
        f16tof32 r7.xyzw, r7.xyzw
        f16tof32 r10.xyzw, r10.xyzw
        break 
        default 
        break 
      endswitch 
    endif 
    add r5.xyzw, r7.xyzw, r8.xyzw
    add r6.xyzw, r9.xyzw, r10.xyzw
  else 
    mov r2.y, r2.z
  endif 
endif 
mul_sat r4.xyzw, r2.yyyy, r5.xyzw
mul_sat r2.xyzw, r2.yyyy, r6.xyzw
mad r4.xyzw, r4.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000), l(0.500000, 0.500000, 0.500000, 0.500000)
ftou r4.xyzw, r4.xyzw
imad r1.y, r4.y, l(256), r4.x
imad r1.y, r4.z, l(0x00010000), r1.y
imad r4.x, r4.w, l(0x01000000), r1.y
mad r2.xyzw, r2.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000), l(0.500000, 0.500000, 0.500000, 0.500000)
ftou r2.xyzw, r2.xyzw
imad r1.y, r2.y, l(256), r2.x
imad r1.y, r2.z, l(0x00010000), r1.y
imad r4.y, r2.w, l(0x01000000), r1.y
if_nz r3.w
  if_z r0.w
    and r1.y, r4.x, l(0xff00ff00)
    ushr r1.w, r4.x, l(8)
    or r4.z, r1.w, r1.y
  else 
    mov r4.z, r4.x
  endif 
  if_z vThreadID.y
    ushr r1.yw, r4.zzzy, l(0, 16, 0, 16)
    bfi r4.xy, l(16, 16, 0, 0), l(0, 0, 0, 0), r1.ywyy, r4.zyzz
  else 
    mov r4.xy, r4.zyzz
  endif 
endif 
bfi r1.xyzw, l(2, 2, 2, 2), l(3, 3, 3, 3), r1.zxxz, l(0, 0, 0, 0)
iadd r0.xyzw, r0.xyzw, r1.xyzw
and r1.x, CB0[0][0].z, l(8)
if_nz r1.x
  ubfe r3.xy, l(3, 14, 0, 0), l(4, 16, 0, 0), CB0[0][0].zwzz
  iadd r1.xy, r3.yzyy, l(31, 31, 0, 0)
  ishr r2.xyzw, r0.zwzw, l(4, 5, 3, 3)
  ishr r1.z, r3.x, l(2)
  ushr r1.xy, r1.xyxx, l(4, 5, 0, 0)
  and r1.x, r1.x, l(2046)
  imad r1.x, r1.z, r1.x, r2.x
  imad r1.x, r1.x, r1.y, r2.y
  ishl r1.y, r0.z, l(2)
  and r1.y, r1.y, l(24)
  bfi r1.y, l(3), l(0), r0.w, r1.y
  ibfe r1.y, l(26), l(0), r1.y
  iadd r1.z, r1.z, r2.z
  bfi r1.w, l(1), l(1), r1.z, l(0)
  iadd r1.w, r1.w, r2.w
  bfi r1.w, l(2), l(1), r1.w, l(0)
  bfi r1.z, l(1), l(0), r1.z, r1.w
  and r1.w, r1.y, l(16)
  bfi r2.xy, l(22, 22, 0, 0), l(8, 11, 0, 0), r1.xxxx, l(0, 0, 0, 0)
  imad r1.xw, r1.wwww, l(2, 0, 0, 16), r2.xxxy
  bfi r1.xy, l(4, 4, 0, 0), l(0, 3, 0, 0), r1.yyyy, r1.xwxx
  bfi r1.xy, l(2, 2, 0, 0), l(6, 9, 0, 0), r3.xxxx, r1.xyxx
  ubfe r1.w, l(3), l(6), r1.x
  and r2.x, r1.z, l(6)
  bfi r1.z, l(1), l(8), r1.z, l(0)
  imad r1.z, r1.w, l(32), r1.z
  imad r1.z, r2.x, l(4), r1.z
  bfi r1.xy, l(1, 1, 0, 0), l(4, 7, 0, 0), r0.zzzz, r1.xyxx
  bfi r1.y, l(9), l(3), r1.z, r1.y
  bfi r1.x, l(6), l(0), r1.x, r1.y
else 
  ishr r2.xyzw, r0.xyzw, l(5, 5, 2, 3)
  iadd r0.x, r3.z, l(31)
  ushr r0.x, r0.x, l(5)
  imad r0.x, r2.y, r0.x, r2.x
  ishl r1.yz, r0.zzzz, l(0, 2, 7, 0)
  and r1.yz, r1.yyzy, l(0, 56, 2048, 0)
  bfi r0.y, l(3), l(0), r0.w, r1.y
  ishl r1.y, r1.y, l(1)
  bfi r0.w, l(3), l(1), r0.w, r1.y
  and r0.w, r0.w, l(96)
  bfi r1.y, l(25), l(7), r0.x, r0.w
  bfi r1.y, l(4), l(0), r0.y, r1.y
  bfi r1.y, l(1), l(4), r0.z, r1.y
  ishl r2.xy, r0.wwww, l(3, 2, 0, 0)
  bfi r0.xw, l(25, 0, 0, 25), l(10, 0, 0, 9), r0.xxxx, r2.xxxy
  bfi r0.xy, l(4, 4, 0, 0), l(3, 2, 0, 0), r0.yyyy, r0.xwxx
  bfi r0.xy, l(1, 1, 0, 0), l(7, 6, 0, 0), r0.zzzz, r0.xyxx
  bfi r0.x, l(12), l(0), r1.z, r0.x
  and r0.y, r0.y, l(1792)
  iadd r0.x, r0.x, r0.y
  and r0.y, r2.z, l(2)
  iadd r0.y, r2.w, r0.y
  bfi r0.y, l(2), l(6), r0.y, l(0)
  iadd r0.x, r0.x, r0.y
  bfi r1.x, l(6), l(0), r1.y, r0.x
endif 
ushr r0.x, r1.x, l(1)
store_uav_typed U0[0].xyzw, r0.xxxx, r4.xyxx
ret 
// Approximately 670 instruction slots used
